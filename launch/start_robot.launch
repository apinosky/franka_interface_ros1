<?xml version="1.0" ?>
<launch>

    <arg name="robot_ip" default="172.16.0.2"/>
    <arg name="rviz" default="true"/>
    <arg name="cam" default="false"/>
    <arg name="image_viewer" default="false" />
    <arg name="fps" default="60" />
    <arg name="pybullet" default="false"/>
    <arg name="use_ati_fts" default="false"/>

    <arg name="load_robot_description"        default="false"/>
    <arg name="load_gripper"                  default="false" />
    <arg name="load_camera"                   default="false" />
    <arg name="load_table"                    default="true" />
    <arg name="use_noetic"                    default="false" />

    <param  name="robot_description" command="$(find xacro)/xacro noetic:=$(arg use_noetic) hand:=$(arg load_gripper) cam:=$(arg load_camera) table:=$(arg load_table) '$(find franka_interface_ros1)/config/panda_arm.urdf.xacro'"/>

    <rosparam command="load" file="$(find franka_interface_ros1)/config/franka_control.yaml" />
    <include file="$(find franka_interface_ros1)/launch/franka_control.launch" >
        <arg name="robot_ip" value="$(arg robot_ip)" />
        <arg name="load_gripper" value="$(arg load_gripper)" />
        <arg name="load_robot_description" value="$(arg load_robot_description)"/>
        <arg name="pybullet" value="$(arg pybullet)"/>
    </include>

    <!-- If needed, broadcast static tf for robot root -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0 0 0 0 0 0 world panda_link0" />

    <group if="$(arg pybullet)">
        <node name="republish2" type="republish" pkg="image_transport" output="screen" args="compressed in:=/usb_cam/image_raw raw out:=/usb_cam/image_raw"/>
    </group>

    <group unless="$(arg pybullet)">
      <node name="go_vel" pkg="franka_interface_ros1" type="go_vel" respawn="false" output="screen" required="false"/>
      <!-- camera -->
      <include file="$(find franka_interface_ros1)/launch/start_camera.launch" if="$(arg cam)">
        <arg name="fps" value="$(arg fps)" />
        <arg name="video_device" value="2" />
      </include>

      <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen" if="$(arg image_viewer)">
        <remap from="image" to="/usb_cam/image"/>
        <param name="image_transport" value="compressed"/>
        <param name="autosize" value="true" />
        <param name="fps" value="$(arg fps)" />
      </node>

      <!-- ignore fts if using simulation -->
      <group if="$(arg use_ati_fts)">
        <arg name="ip_address" default="192.168.0.2" />
        <arg name="frame_id" default="ft_frame" />
        <arg name="ft_yaw_offset" default="1.57" />
        <param name="ft_yaw_offset" value="$(arg ft_yaw_offset)" />
        <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_2" args="0 0 0 $(arg ft_yaw_offset) 0 0 panda_link8 $(arg frame_id)" />
        <param name="use_external_fts" type="bool" value="true" />
        <param name="max_force" type="int" value="5" />
        <node pkg="netft_rdt_driver" type="netft_node" name="netft_node" args="--address $(arg ip_address) --frame_id $(arg frame_id)" />
      </group>

    </group>

    <group if="$(arg rviz)">
        <node pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find franka_interface_ros1)/config/cam.rviz" required="false"/>
    </group>

</launch>
